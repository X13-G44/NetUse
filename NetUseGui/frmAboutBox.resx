<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        mPUGQqortwAAAABJRU5ErkJggg==
</value>
  </data>
</root>